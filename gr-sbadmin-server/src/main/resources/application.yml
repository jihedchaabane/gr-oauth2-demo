server:
  port: 8763

spring:
  application:
    name: gr-sbadmin-server
  cloud:
    discovery:
      enabled: true		
  security:
    oauth2:
      client:
        registration:
          ms3:
            client-id: gr-ms3-resource
            client-secret: secret3
            scope: actuator.read
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_basic
            provider: gr-auth-server
        provider:
          gr-auth-server:
            token-uri: http://localhost:8764/oauth2/token
#############################################################
# java -jar fakesmtp-2.0.jar -p 2525
# https://threadminions.wordpress.com/2019/06/25/alert-with-spring-boot-admin-server/
#  mail:
#    host: localhost
#    port: 2525
#    protocol: smtp

# Spring Boot Admin Configuration
  boot:
    admin:
      discovery:
        ignored-services: gr-sbadmin-server
      server:
        # To enable or disable admin server
        enabled: true
      # To set title of admin server
      ui:
        title: SpringBoot-Admin UI
      monitor:
        # Time interval in ms to update the status of applications with 
        # expired status-informations.
        status-interval: 15000
        # To set lifetime of status. 
        # The status won't be updated as long the last status isn't expired.
        status-lifetime: 15000
        # Default number of retries for failed requests.
        # retry is available only for GET requests.
        default-retries: 2
      # To set context path of admin server
      context-path: /
      routes:
        endpoints: info
#      notify:
#        mail:
#          to: jihed@gmail.com, chaabane@gmail.com
#          enabled: true
#############################################################
eureka:
  client:
    service-url:
      defaultZone: ${params.eureka.uri}
    fetch-registry: true
    register-with-eureka: true
    #----> 'gr-conf-swagger-aggregator' Cors issues fix : Rafraîchir le registre toutes les X secondes
    registry-fetch-interval-seconds: ${eureka.fetch.seconds:25}
  instance:
    preferIpAddress: true
    #----> Remove ipAddress and hostname to let Eureka resolve dynamically
    #ipAddress: ${host.where.docker.ip}
    #----> Optionally, set a non-qualified hostname if needed
    #hostname: ${spring.application.name}
    instance-id: ${spring.application.name}:${random.int}
    metadata-map:
      #----> Indique que ce microservice doit être inclus dans le swagger de 'gr-conf-swagger-aggregator'
      #----> (désactivé par défaut sinon).
      swagger.aggregator.enabled: ${aggregator.eureka.enabled:false}
      management.context-path: /actuator

management:
  endpoints:
    #----> To expose all management endpoints
    web.exposure.include: "*"
    #----> To expose defined endpoints
    #----> web.exposure.include: health, caches, env, info, logfile, httptrace, metrics
    web.base-path: /actuator
    web.enable.include: health
  endpoint:
    health:
      show-details: ALWAYS
  # --> Include git.properties generated informations (plugin:git-commit-id-plugin) in /actuator/info endpoint.
  info:
    git:
      mode: full

##----> START : uri de gr-conf-swagger-aggregator
swagger-params:
  issuerUri: ${params.oauth2.issuerUri}
  servers:
    liste:
      - uri: http://localhost:${server.port}
        description: Local environment
      - uri: http://10.0.0.137:${server.port}
        description: Development environment
      - uri: http://10.0.0.500:${server.port}
        description: Homologation environment
      - uri: http://10.0.0.500:${server.port}
        description: Production environment
  aggregator:
    enabled: ${aggregator.eureka.enabled:false}
    cors:
      uri: ${params.swaggerAggregator.uri}
#############################################################
#local
params:
  eureka:
    uri: http://localhost:8761/eureka/
  oauth2:
    issuerUri: http://localhost:8764
    #----> for SPRINGBOOT-OAUTH2-EXTERNAL-RESTTEMPLATE-CONSUMER until: 
    #----> @TODO try to replace it with eureka discovery alternative.
    #----> .issuer("http://GR-AUTH-SERVER")
    loadBalancedIssuerUri: http://GR-AUTH-SERVER
  gateway:
    uri: http://localhost:8766
  gatewayOauth2:
    uri: http://GR-API-GATEWAY
  swaggerAggregator:
    uri: http://localhost:8765
  zipkin:
    uri: http://localhost:9411
  keystore:
    type: PKCS12
    path: file:C:/E/TOOLS/ms2.p12
    password: jihed123
    alias: ms2
  truststore:
    path: C:/E/TOOLS/ms1-truststore.jks
    password: jihed1234

## uri/enabled de gr-conf-swagger-aggregator
aggregator.eureka.enabled: false
#############################################################
logging:
  level:
    de.codecentric.boot.admin: DEBUG
    com.netflix.discovery: DEBUG
    org.springframework.security: DEBUG